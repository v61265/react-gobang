{"version":3,"sources":["components/Board.js","components/Information.js","App.js","hooks/useBoard.js","reportWebVitals.js","index.js"],"names":["BoardWrapper","styled","span","Cell","div","props","player","Piece","rows","Array","from","length","columns","Board","board","handleClickCell","map","_","y","x","onClick","e","InformationWrapper","ButtonWrapper","Button","button","Input","input","Hidden","Information","round","handleReset","handleSave","handleCopy","recordInput","handleChangeRecord","hanleReproduceRecord","winner","className","value","btoa","JSON","stringify","type","onChange","Status","h1","App","useState","window","localStorage","getItem","parse","fill","setBoard","setRound","setWinner","setRrecordInput","checkWin","temp","scope","count","i","setItem","alert","copy","document","querySelector","focus","select","success","execCommand","error","target","record","atob","console","log","useBoard","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.24d1daa7.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst BoardWrapper = styled.span`\n  margin: 0 auto;\n  margin-top: 32px;\n  display: flex;\n  justify-content: center;\n  background: #e6b77e;\n  width: 83vmin;\n  box-shadow: 4px 4px 3px rgba(20%, 20%, 40%, 0.5);\n  padding: 3vmin;\n`;\n\nconst Cell = styled.div`\n  height: 3vmin;\n  width: 3vmin;\n  border: 1px solid gray;\n  padding: 0.5vmin;\n  position: relative;\n\n  &:hover {\n    background: ${(props) => (props.player ? \"\" : \"#f3cd9f\")};\n  }\n`;\n\nconst Piece = styled.div`\n  border-radius: 50%;\n  background: ${(props) => props.player};\n  height: 100%;\n  width: 100%;\n  box-shadow: 2px 0px 1px rgba(20%, 20%, 40%, 1);\n`;\n\nconst rows = Array.from({ length: 19 });\nconst columns = Array.from({ length: 19 });\n\nexport default function Board({ board, handleClickCell }) {\n  return (\n    <BoardWrapper>\n      {rows.map((_, y) => (\n        <div key={y}>\n          {columns.map((_, x) => (\n            <Cell\n              key={[x, y]}\n              onClick={(e) => handleClickCell(x, y)}\n              player={board[x][y]}\n            >\n              {!board[x][y] || <Piece player={board[x][y]} />}\n            </Cell>\n          ))}\n        </div>\n      ))}\n    </BoardWrapper>\n  );\n}\n\nBoard.propTypes = {\n  board: PropTypes.array,\n  handleClickCell: PropTypes.func,\n};\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst InformationWrapper = styled.div`\n  margin: 0 auto;\n  margin-top: 20px;\n  text-align: center;\n`;\n\nconst ButtonWrapper = styled.div`\n  margin-top: 5px;\n`;\n\nconst Button = styled.button`\n  padding: 8px;\n  background: white;\n  border: 1px solid grey;\n  color: grey;\n  border-radius: 5px;\n  font-size: 14px;\n  box-shadow: 0px 0 0 black;\n\n  &:hover {\n    cursor: pointer;\n    color: white;\n    background: grey;\n  }\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nconst Input = styled.input`\n  padding: 5px;\n  margin-right: 3px;\n`;\n\nconst Hidden = styled.input`\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  width: 2em;\n  height: 2em;\n  padding: 0;\n  box-shadow: none;\n  opacity: 0;\n`;\n\nexport default function Information({\n  round,\n  handleReset,\n  handleSave,\n  handleCopy,\n  board,\n  recordInput,\n  handleChangeRecord,\n  hanleReproduceRecord,\n  winner,\n}) {\n  return (\n    <InformationWrapper>\n      <ButtonWrapper>\n        <Button onClick={() => handleReset()}>重來一次</Button>\n        <Button onClick={() => handleSave()}>儲存棋局</Button>\n        <Button onClick={() => handleCopy()}>\n          <Hidden\n            className='recordData'\n            value={btoa(JSON.stringify([JSON.stringify(board), round, winner]))}\n          />\n          複製棋局\n        </Button>\n      </ButtonWrapper>\n      <ButtonWrapper>\n        <Input\n          className='record'\n          type='text'\n          value={recordInput}\n          onChange={handleChangeRecord}\n        />\n        <Button onClick={hanleReproduceRecord}>送出已儲存棋局</Button>\n      </ButtonWrapper>\n    </InformationWrapper>\n  );\n}\n\nInformation.propTypes = {\n  round: PropTypes.string,\n  winner: PropTypes.string,\n  handleReset: PropTypes.func,\n  handleSave: PropTypes.func,\n  handleCopy: PropTypes.func,\n  board: PropTypes.array,\n  recordInput: PropTypes.string,\n  handleChangeRecord: PropTypes.func,\n  hanleReproduceRecord: PropTypes.func,\n};\n","import Board from \"./components/Board\";\nimport Information from \"./components/Information\";\nimport useBoard from \"./hooks/useBoard\";\nimport styled from \"styled-components\";\n\nconst Status = styled.h1`\n  text-align: center;\n`;\n\nfunction App() {\n  const {\n    board,\n    handleClickCell,\n    round,\n    handleReset,\n    winner,\n    handleSave,\n    handleCopy,\n    recordInput,\n    handleChangeRecord,\n    hanleReproduceRecord,\n  } = useBoard();\n\n  return (\n    <>\n      <Status>{winner ? `${winner} win` : `${round} turn`}</Status>\n      <Board board={board} handleClickCell={handleClickCell} winner={winner} />\n      <Information\n        round={round}\n        handleReset={handleReset}\n        winner={winner}\n        handleSave={handleSave}\n        handleCopy={handleCopy}\n        board={board}\n        recordInput={recordInput}\n        handleChangeRecord={handleChangeRecord}\n        hanleReproduceRecord={hanleReproduceRecord}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import { useState } from \"react\";\n\nexport default function useBoard() {\n  const [column, row] = [19, 19];\n  const [board, setBoard] = useState(\n    window.localStorage.getItem(\"board\")\n      ? JSON.parse(JSON.parse(window.localStorage.getItem(\"board\"))[0])\n      : Array(column).fill(Array(row).fill(null))\n  );\n  const [round, setRound] = useState(\n    window.localStorage.getItem(\"board\")\n      ? JSON.parse(window.localStorage.getItem(\"board\"))[1]\n      : \"black\"\n  );\n  const [winner, setWinner] = useState(\n    window.localStorage.getItem(\"board\")\n      ? JSON.parse(window.localStorage.getItem(\"board\"))[2]\n      : \"\"\n  );\n  const [recordInput, setRrecordInput] = useState(\"\");\n\n  // 改變 board + round\n  const handleClickCell = (x, y) => {\n    if (board[x][y] || winner) return;\n    let temp = JSON.parse(JSON.stringify(board));\n    temp[x][y] = round;\n    setBoard(temp);\n    checkWin(temp, x, y);\n    setRound(round === \"black\" ? \"white\" : \"black\");\n  };\n\n  // 分別該刻棋子的八個方向是否有\n  const checkWin = (temp, x, y) => {\n    const scopes = [\n      [1, 0],\n      [1, 1],\n      [1, -1],\n      [0, 1],\n      [0, -1],\n      [-1, 0],\n      [-1, 1],\n      [-1, -1],\n    ];\n    for (let scope of scopes) {\n      let count = 0;\n      for (let i = 4; i >= 0; i--) {\n        try {\n          if (temp[x + scope[0] * i][y + scope[1] * i] !== round) break;\n        } catch {\n          continue;\n        }\n        count++;\n      }\n      if (count >= 4) {\n        setWinner(round);\n        break;\n      }\n    }\n  };\n\n  // 重設棋盤、贏家、輪到誰 → 存入 localStorage\n  const handleReset = () => {\n    setBoard(Array(column).fill(Array(row).fill(null)));\n    setWinner(\"\");\n    setRound(\"black\");\n    window.localStorage.setItem(\n      \"board\",\n      JSON.stringify([JSON.stringify(board), round, winner])\n    );\n  };\n\n  const handleSave = () => {\n    window.localStorage.setItem(\n      \"board\",\n      JSON.stringify([JSON.stringify(board), round, winner])\n    );\n    alert(\"已儲存，再次開啟時會被保存！\");\n  };\n\n  const handleCopy = () => {\n    const copy = document.querySelector(\".recordData\");\n    copy.focus();\n    copy.select();\n    try {\n      const success = document.execCommand(\"copy\");\n      alert(success ? \"複製成功\" : \"複製不成功\");\n    } catch (error) {\n      alert(\"無法複製\");\n    }\n  };\n\n  const handleChangeRecord = (e) => {\n    setRrecordInput(e.target.value);\n  };\n\n  const hanleReproduceRecord = () => {\n    const record = JSON.parse(atob(recordInput));\n    console.log(record);\n    try {\n      setBoard(JSON.parse(record[0]));\n      setRound(record[1]);\n      setWinner(record[2]);\n      setRrecordInput(\"\");\n    } catch (e) {\n      console.log(e);\n      alert(\"資料不正確\");\n    }\n  };\n\n  return {\n    board,\n    handleClickCell,\n    round,\n    handleReset,\n    winner,\n    handleSave,\n    handleCopy,\n    recordInput,\n    handleChangeRecord,\n    hanleReproduceRecord,\n  };\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}