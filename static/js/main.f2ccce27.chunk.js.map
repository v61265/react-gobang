{"version":3,"sources":["components/Board.js","components/Information.js","App.js","hooks/useBoard.js","reportWebVitals.js","index.js"],"names":["BoardWrapper","styled","span","Cell","div","props","player","Piece","rows","Array","from","length","columns","Board","board","handleClickCell","map","_","y","x","onClick","e","InformationWrapper","ButtonWrapper","Button","button","Input","input","Hidden","Information","round","handleReset","handleSave","handleCopy","recordInput","handleChangeRecord","hanleReproduceRecord","className","value","JSON","stringify","type","onChange","Status","h1","App","useState","window","localStorage","getItem","parse","fill","setBoard","setRound","winner","setWinner","setRrecordInput","checkWin","temp","scope","count","i","setItem","alert","copy","document","querySelector","focus","select","success","execCommand","error","target","record","console","log","useBoard","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f2ccce27.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BoardWrapper = styled.span`\r\n  margin: 0 auto;\r\n  margin-top: 32px;\r\n  display: flex;\r\n  justify-content: center;\r\n  background: #e6b77e;\r\n  width: 83vmin;\r\n  box-shadow: 4px 4px 3px rgba(20%, 20%, 40%, 0.5);\r\n  padding: 3vmin;\r\n`;\r\n\r\nconst Cell = styled.div`\r\n  height: 3vmin;\r\n  width: 3vmin;\r\n  border: 1px solid gray;\r\n  padding: 0.5vmin;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    background: ${(props) => (props.player ? \"\" : \"#f3cd9f\")};\r\n  }\r\n`;\r\n\r\nconst Piece = styled.div`\r\n  border-radius: 50%;\r\n  background: ${(props) => props.player};\r\n  height: 100%;\r\n  width: 100%;\r\n  box-shadow: 2px 0px 1px rgba(20%, 20%, 40%, 1);\r\n`;\r\n\r\nconst rows = Array.from({ length: 19 });\r\nconst columns = Array.from({ length: 19 });\r\n\r\nexport default function Board({ board, handleClickCell }) {\r\n  return (\r\n    <BoardWrapper>\r\n      {rows.map((_, y) => (\r\n        <div key={y}>\r\n          {columns.map((_, x) => (\r\n            <Cell\r\n              key={[x, y]}\r\n              onClick={(e) => handleClickCell(x, y)}\r\n              player={board[x][y]}\r\n            >\r\n              {!board[x][y] || <Piece player={board[x][y]} />}\r\n            </Cell>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </BoardWrapper>\r\n  );\r\n}\r\n\r\nBoard.propTypes = {\r\n  board: PropTypes.array,\r\n  handleClickCell: PropTypes.func,\r\n};\r\n","import styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst InformationWrapper = styled.div`\r\n  margin: 0 auto;\r\n  margin-top: 20px;\r\n  text-align: center;\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 8px;\r\n  background: white;\r\n  border: 1px solid grey;\r\n  color: grey;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  box-shadow: 0px 0 0 black;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: white;\r\n    background: grey;\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 5px;\r\n  margin-right: 3px;\r\n`;\r\n\r\nconst Hidden = styled.input`\r\n  position: fixed;\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 2em;\r\n  height: 2em;\r\n  padding: 0;\r\n  box-shadow: none;\r\n  opacity: 0;\r\n`;\r\n\r\nexport default function Information({\r\n  round,\r\n  handleReset,\r\n  handleSave,\r\n  handleCopy,\r\n  board,\r\n  recordInput,\r\n  handleChangeRecord,\r\n  hanleReproduceRecord,\r\n}) {\r\n  return (\r\n    <InformationWrapper>\r\n      <ButtonWrapper>\r\n        <Button onClick={() => handleReset()}>重來一次</Button>\r\n        <Button onClick={() => handleSave()}>儲存棋局</Button>\r\n        <Button onClick={() => handleCopy()}>\r\n          <Hidden\r\n            className='recordData'\r\n            value={JSON.stringify([JSON.stringify(board), round])}\r\n          />\r\n          複製棋局\r\n        </Button>\r\n      </ButtonWrapper>\r\n      <ButtonWrapper>\r\n        <Input\r\n          className='record'\r\n          type='text'\r\n          value={recordInput}\r\n          onChange={handleChangeRecord}\r\n        />\r\n        <Button onClick={hanleReproduceRecord}>送出已儲存棋局</Button>\r\n      </ButtonWrapper>\r\n    </InformationWrapper>\r\n  );\r\n}\r\n\r\nInformation.propTypes = {\r\n  round: PropTypes.string,\r\n  handleReset: PropTypes.func,\r\n  handleSave: PropTypes.func,\r\n  handleCopy: PropTypes.func,\r\n  board: PropTypes.array,\r\n  recordInput: PropTypes.string,\r\n  handleChangeRecord: PropTypes.func,\r\n  hanleReproduceRecord: PropTypes.func,\r\n};\r\n","import Board from \"./components/Board\";\nimport Information from \"./components/Information\";\nimport useBoard from \"./hooks/useBoard\";\nimport styled from \"styled-components\";\n\nconst Status = styled.h1`\n  text-align: center;\n`;\n\nfunction App() {\n  const {\n    board,\n    handleClickCell,\n    round,\n    handleReset,\n    winner,\n    handleSave,\n    handleCopy,\n    recordInput,\n    handleChangeRecord,\n    hanleReproduceRecord,\n  } = useBoard();\n\n  return (\n    <>\n      <Status>{winner ? `${winner} win` : `${round} turn`}</Status>\n      <Board board={board} handleClickCell={handleClickCell} winner={winner} />\n      <Information\n        round={round}\n        handleReset={handleReset}\n        winner={winner}\n        handleSave={handleSave}\n        handleCopy={handleCopy}\n        board={board}\n        recordInput={recordInput}\n        handleChangeRecord={handleChangeRecord}\n        hanleReproduceRecord={hanleReproduceRecord}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import { useState } from \"react\";\r\n\r\nexport default function useBoard() {\r\n  const [column, row] = [19, 19];\r\n  const [board, setBoard] = useState(\r\n    window.localStorage.getItem(\"board\")\r\n      ? JSON.parse(JSON.parse(window.localStorage.getItem(\"board\"))[0])\r\n      : Array(column).fill(Array(row).fill(null))\r\n  );\r\n  const [round, setRound] = useState(\r\n    window.localStorage.getItem(\"board\")\r\n      ? JSON.parse(window.localStorage.getItem(\"board\"))[1]\r\n      : \"black\"\r\n  );\r\n  const [winner, setWinner] = useState(\"\");\r\n  const [recordInput, setRrecordInput] = useState(\"\");\r\n\r\n  // 改變 board + round\r\n  const handleClickCell = (x, y) => {\r\n    if (board[x][y] || winner) return;\r\n    let temp = JSON.parse(JSON.stringify(board));\r\n    temp[x][y] = round;\r\n    setBoard(temp);\r\n    checkWin(temp, x, y);\r\n    setRound(round === \"black\" ? \"white\" : \"black\");\r\n  };\r\n\r\n  // 分別該刻棋子的八個方向是否有\r\n  const checkWin = (temp, x, y) => {\r\n    const scopes = [\r\n      [1, 0],\r\n      [1, 1],\r\n      [1, -1],\r\n      [0, 1],\r\n      [0, -1],\r\n      [-1, 0],\r\n      [-1, 1],\r\n      [-1, -1],\r\n    ];\r\n    for (let scope of scopes) {\r\n      let count = 0;\r\n      for (let i = 4; i >= 0; i--) {\r\n        try {\r\n          if (temp[x + scope[0] * i][y + scope[1] * i] !== round) break;\r\n        } catch {\r\n          continue;\r\n        }\r\n        count++;\r\n      }\r\n      if (count >= 4) {\r\n        setWinner(round);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setBoard(Array(column).fill(Array(row).fill(null)));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    window.localStorage.setItem(\r\n      \"board\",\r\n      JSON.stringify([JSON.stringify(board), round])\r\n    );\r\n    alert(\"已儲存，再次開啟時會被保存！\");\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    const copy = document.querySelector(\".recordData\");\r\n    copy.focus();\r\n    copy.select();\r\n    try {\r\n      const success = document.execCommand(\"copy\");\r\n      alert(success ? \"複製成功\" : \"複製不成功\");\r\n    } catch (error) {\r\n      alert(\"無法複製\");\r\n    }\r\n  };\r\n\r\n  const handleChangeRecord = (e) => {\r\n    setRrecordInput(e.target.value);\r\n  };\r\n\r\n  const hanleReproduceRecord = () => {\r\n    const record = document.querySelector(\".record\").value;\r\n    try {\r\n      setBoard(JSON.parse(JSON.parse(record)[0]));\r\n      setRound(JSON.parse(record)[1]);\r\n      setRrecordInput(\"\");\r\n    } catch (e) {\r\n      console.log(e);\r\n      alert(\"資料不正確\");\r\n    }\r\n  };\r\n\r\n  return {\r\n    board,\r\n    handleClickCell,\r\n    round,\r\n    handleReset,\r\n    winner,\r\n    handleSave,\r\n    handleCopy,\r\n    recordInput,\r\n    handleChangeRecord,\r\n    hanleReproduceRecord,\r\n  };\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}